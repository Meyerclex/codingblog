{"/":{"title":"Index","content":"\n## 🖼️ About \n这里是Lyin有关代码的笔记。\n1. 站点是我探索互联网各类服务的玩具成果。页面由[Quartz](https://github.com/jackyzha0/quartz)生成，搭配Obsidian写作。\n2. [Setup Tag](tags/setup)里有关于Quartz的其他信息，**当然是由原作者编写的**，只是我仍保留在库中没有删除，如果你感兴趣的话可以翻阅看看。\n3. [[📗 Quartz安装笔记]]\n\n## 🖋️JavaScript\n1. [[The complete JavaScript Course 2022]]\n2. [[Function 函数]]\n3. [[Array 数组]]\n4. [[Object 对象]]\n5. [[Loop 循环]]\n6. [[Scope 作用域]]\n\t1. [[Block area 块作用域]]\n## 📒HTML5 + CSS3 \n1. [[H5C3 Tips P1-200]]\n2. [[H5(Html5)+CSS3：P1-200]]\n3. [[H5(Html5)+CSS3：P200-P275]]\n4. [[H5(Html5)+CSS3：P275-]]\n## 📑其他\n1. [[文件路径的一些通用规则]]\n\n\n\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E7%9A%84%E4%B8%80%E4%BA%9B%E9%80%9A%E7%94%A8%E8%A7%84%E5%88%99":{"title":"","content":"\n文件路径的一些通用规则：\n\n-   若引用的目标文件与 HTML 文件同级，只需直接使用文件名，例如：`my-image.jpg`。\n-   要引用子目录中的文件，请在路径前面写上目录名，再加上一个正斜杠。例如：`subdirectory/my-image.jpg`。\n-   若引用的目标文件位于 HTML 文件的**上级**，需要加上两个点。举个例子，如果 `index.html` 在 `test-site` 的一个子文件夹内，而 `my-image.jpg` 在 `test-site` 内，你可以使用`../my-image.jpg` 从 `index.html` 引用 `my-image.jpg`。\n-   以上方法可以随意组合，比如：`../subdirectory/another-subdirectory/my-image.jpg`。\n\n**备注：** Windows 的文件系统使用反斜杠而不是正斜杠，例如：`C:\\Windows`。这在 HTML 中并不重要——即使你在 Windows 系统上进行开发，你也应该在代码中使用正斜杠。","lastmodified":"2022-08-21T13:58:20.401827551Z","tags":null},"/-Quartz%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0":{"title":"📗 Quartz安装笔记","content":"\n前段时间在象上刷到[Quartz](https://github.com/jackyzha0/quartz)，算是一个支持Obsidian双链玩法的博客？点了收藏之后今天适逢周六，刚好呢又到了晚上十一点（人家的一个不干正事又不打算睡觉的时间），虽然呢也没有什么笔记要整理，但是就是看到漂亮的东西想试一试。搭建并不算难，而且很漂亮！于是来写一下笔记记录过程。\n\n*第一步：BGM - In Motion启动！Let the hacking begin！*\n\n首先来讲一下我对Quartz的使用感受。它的框架也是基于Hugo啦，这直接降低了我的心理负担，因为算是一个很熟悉的东西。\n\n它默认支持：\n1. 搜索\n2. 本地预览\n3. 夜间模式\n4. 文章目录（可以修改层级和目录序号的显示）\n5. 支持Obsidian的双链玩法，直接打开Obsidian就写！无痛保存！\n6. 最近的文章\n7. 文章Tag\n8. Front-Matter（这好像并不是必须的）\n\n但是它的缺点是本身并不支持归档（Archive）的功能。于是作为归档功能的替代，在此隆重向大家介绍我用Obsidian时常用的MOC（Map of Content），算是一种整理思路。轻轻地推荐这篇最早让我了解到Map of Content的一篇文章：[Obsidian · 网课学习笔记整理 From Seviche.cc](https://seviche.cc/2022-03-07-obsidian-notes1)。\n\n其实概括而谈MOC就是放弃用Obsidian本身的文件夹功能给笔记归类（并非必要，只是我很懒得整理），直接建立一个索引页，里面用双链功能创建文章，索引页就像归档或总目录一样，带你去任何一页笔记。\n\n而Quartz的使用完全适配这种笔记管理思路，在Quartz中，`_index.md`文件就是博客主页，可以被任意编写，因此可以作为索引/文章目录页使用。\n\n\n\u003e 注意：我基本没有什么计算机基础，以下内容不保真！有疑问的话建议去原作者的仓库底下提Issue :D\n\n## 你需要有些什么\n1. Github账号\n2. [Go](https://golang.org/doc/install) 环境(\u003e= 1.16) 。（这个东西我都不知道我为什么会有）\n3. [Hugo](https://gohugo.io/getting-started/installing/)\n4. Make工具。因为我也缺少这个所以后文有关于它的安装与配置。\n## 那么就开始吧！\n基本上只需要跟着作者的Setup一步步走下来。\n1. Fork作者的仓库： [Quartz Repository](https://github.com/jackyzha0/quartz)\n2. Clone仓库到本地，可以用Github Desktop也可以敲命令行：\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n于是此时你已经有了一个`quartz`文件夹了。\n\n你所有的内容都可以在`quartz/content`中找到。里面默认有`notes`、`private`、`templates`三个文件夹，顾名思义分别存放笔记、隐私笔记（不显示）、模板文件夹。\n\n但是你的笔记并不一定需要放在`/content/notes`中，完全可以放在`/content`下。\n\n同时里面还有`_index.md`文件，它里面的内容直接展现为播客主页。\n\n### Obsidian配置\n1. （可选）新建一个笔记库，或者直接将你的笔记库移动到`/content`文件夹。\n\t1. 但假设这么做了，文件夹层级目录则为`/content/Vault`，你可以用Obsidian在里面新建、修改笔记。\n\t2. 那么此时就涉及一个问题，可是`_index.md`文件是放在`/content`目录中的，这意味着你在Obsidian中见不到它。\n\t3. 可是按照我的笔记使用逻辑，我希望博客主页(`index.md`)直接作为我的笔记索引页，放满我的笔记双链（幻想），如果它不能在Obsidian里修改，那就会很不方便。\n2. 我希望一打开笔记就能修改所有东西。因此我是这么做的：直接将我的Obsidian笔记库位置放在了根目录`quartz`中，并将上述三个文件夹、一个`_index.md`剪切到了笔记库中，删掉`quartz/content`，并把笔记库重命名为`content`。\n3. 在Obsidian的`设置 \u003e 文件与链接`中打开`始终更新内部链接`，内部链接类型：`基于仓库根目录的绝对路径`。\n\n### 安装hugo-obsidian\n\n\u003e 需要确保你已经安装了 [Go](https://golang.org/doc/install) (\u003e= 1.16) 。\n\n```\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n如果遇到报错：\n```\ngo install: github.com/jackyzha0/hugo-obsidian@latest: module github.com/jackyzha0/hugo-obsidian: Get \"https://proxy.golang.org/github.com/jackyzha0/hugo-obsidian/@v/list\": dial tcp 142.251.42.241:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\n```\n解决办法：\n执行命令`go env -w GOPROXY=https://goproxy.cn`\n\n### 安装Hugo\n1. [Install Hugo | Hugo](https://gohugo.io/getting-started/installing/)\n2. 运行命令行：\n```\ncd \u003cquartz文件夹地址\u003e\nmake serve\n```\n3. 如果此时显示`'make'不是内部或外部命令，也不是可运行的程序 或批处理文件`，那么就需要安装工具make。\n4. 参照[make不是内部或外部命令，也不是可运行的程序或批处理文件解决方案](https://blog.csdn.net/qq_49641239/article/details/121517925)，逐步安装完毕并配置好PATH环境变量。\n\t1. 假如对安装有疑惑的话可以参考：[MinGW下载和安装教程](http://c.biancheng.net/view/8077.html)的前六步。\n\t2. 关于环境变量的配置，请不要仅安装在当前的用户变量中，而是安装在**系统变量**中。\n\t3. 确认上述步骤无误，如果此时执行命令行`make serve`仍显示`不是内部或外部命令`的话，将`MinGW\\bin`下的`mingw32-make.exe`重命名为 `make.exe`。\n6. 执行命令行后，博客生成成功，访问`http://localhost:1313/`本地预览。\n\n### 发布你的页面\n全程按照[Deploying Quartz to the Web](https://quartz.jzhao.xyz/notes/hosting/)操作，完全不知道原理，我至今也没真正搞懂Github分支是什么，不知道为什么我本地所作的一些修改全都安静无缝地Push到了Hugo分支里。但它就是成功了（成功了）。\n\n我就这样静静地操作到了最后一步绑定域名。\n\n关于子域名我是这么干的：\n\n1. 在仓库根目录`Add file`，写一个文件名为`CNAME`且没有后缀的文件。在里面写入你要绑定的域名：`c.gregueria.icu`。\n2. 然后去DNS设置里，子域名记录，记录类型为`CNAME`，`  \nIP地址/目标主机：`你的GitHub用户名.github.io`。\n3. 然后去`Setting \u003e Pages \u003e Custom domain`把你的域名写好，保存。\n\n大功告成！\n\n### 其余的配置\n\n在`config.toml`和`/data/config.yaml`和`/data/graphConfig.yaml`中可以修改网站基本配置。\n\n### 其他\n1. 这个分支到底是怎么回事啊。\n2. 目前网站证书无效，搜了一圈教程都没能解决，现在它还是一个很不安全的网站呢。并且虽然我什么也没动但是网站时常掉线，感觉是我绑定域名那一步有些问题。\n3. 看到有人的网站装修（[jzhao.xyz](https://jzhao.xyz/)）很漂亮，这个也太炫了吧？！！\n4. 人家哪有那么多笔记要放啊？！！！","lastmodified":"2022-08-21T13:58:20.401827551Z","tags":null},"/Array-%E6%95%B0%E7%BB%84":{"title":"Array 数组","content":"\n1. `Array.push('')` \n\t1. 加一个元素在数组的末尾。同时它可以返回一些数值：它返回的数值是新数组的长度。\n```js\nconst friends = ['tim', 'allen', 'bob']\nconst newLength = friends.push('kim')\nconsole.log(newLength) // 4\n```\n\n2. `Array.unshift('')`\n\t1. 添加一个元素在数组的开头。同样返回新数组的长度。\n3. `Array.pop('')` \n\t1. 删除数组最后一个元素，返回被删除的值\n4. `Array.shift('')` \n\t1. 删除数组第一个元素，并返回被删除的值\n5. `Array.indexOf('')`\n\t1. 返回元素在数组中的位置，如果元素不存在，返回值`-1`\n6. `Array.includes('')`\n\t1. 检查元素是否包含在数组中，返回true/false\n\t2. string单引号，number不用加引号。存在类型强制\n\t3. ES6的新特性\n\n## 遍历数组\n- 遍历就是把数组中的每个元素从头到尾都访问一遍。\n```js\nvar arr = ['a', 'b', 'c', 'd', 'e']\nconsole.log(arr.length)\nfor (var i = 1; i \u003c= arr.length; i++) {\n    console.log(`这是数组中的第${i}个，是${arr[i-1]}`)\n}\n```\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220820170432.png)\n\n### 习题\n1. 求数组和\n```js\n// 求数组和\n\nvar arr = [1, 34, 0, 3, 7, 9]\nvar sum = 0;\nvar average = 0;\nfor (var i = 0; i \u003c arr.length; i++) {\n    sum = sum + arr[i]\n}\nconsole.log(sum);\naverage = sum / arr.length\nconsole.log(average);\n```\n2. 求数组中的最大值/最小值\n```js\n// 数组最大值\nvar max = arr[0]\nfor (var i = 1; i \u003c arr.length; i++) {\n    if (arr[i] \u003e max) {\n        max = arr[i]\n    }\n}\nconsole.log(max)\n```\n思路：\n1. 声明一个保存最大元素的变量max\n2. 默认最大值可以先取数组中的第一个元素\n3. 遍历这个数组，把里面每个数组元素和max相比较\n4. 如果这个数组元素大于max，就把数组元素存在max里面，否则直接进行下一轮。最后输出max。\n\n## 新增数组元素\n1. 修改数组元素，修改length长度\n```js\nvar arr = ['a', 'b', 'c', 'd', 'e']\narr.length = 8;\nconsole.log(arr); \n// 多出来的后三个元素将显示为empty，访问会显示undefined\n```\n2. 新增数组元素，修改索引号\n```js\nvar arr = ['a', 'b', 'c', 'd', 'e']\narr[5] = 'f';\nconsole.log(arr)\n// 原先没有则追加\narr[0] = 'yellow';\nconsole.log(arr)\n// 原先存在则替换\n// 不要直接给数组名负值，否则数组元素都会消失\n```\n\n- 但这么干也太离谱了吧！\n\n## 习题\n1. 将0-10的整数存放在数组中\n```js\nconst arr = [] // 空数组\nfor (var i = 1; i \u003c= 10; i++) {\n    arr.push(`${i}`)\n}\nconsole.log(arr) \n// ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'] \n// 存放的是字符串！\n\nconst arr = [] // 空数组\nfor (var i = 1; i \u003c= 10; i++) {\n    arr.push(i)\n}\nconsole.log(arr) \n// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n// 存放的是数字\n```\n\n\n2. 将数组中大于十的数字存放到新数组中\n```js\nconst arr = [1, 34, 0, 3, 7, 9, 23, 88, 21]\nconst arrBiggerThanTen = []\nfor (var i = 0; i \u003c arr.length; i++) {\n    if (arr[i] \u003e= 10) {\n        arrBiggerThanTen.push(arr[i])\n    }\n}\nconsole.log(arrBiggerThanTen)\n```\n\n3. 翻转数组\n```js\nvar arr = ['a', 'b', 'c', 'd', 'e']\nvar arrmirror = []\nfor (var i = 0; i \u003c arr.length; i++) {\n    arrmirror.push(arr[arr.length - 1 - i])\n}\nconsole.log(arrmirror)\n```\n\n## 冒泡排序\n一种算法，把一系列的数据按照一定的顺序进行排列显示（从大到小或从小到大）。它重复走访过要排序的数列，不断进行两两比较，顺序错误则交换。重复交换到不再需要交换。\n这个算法的名字由来是越小的元素会经由交换慢慢浮到数列顶端。\n\n1. 如何交换两个变量\n```js\nvar num1 = 10;\nvar num2 = 20;\nvar temp;\ntemp = num1;\nnum2 - temp;\nconsole.log(num1, num2)\n```\n\n原理：\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220820190616.png)\n\n实现：\n```js\nvar arr = [1, 34, 0, 3, 7, 9, 23, 88, 21]\nfor (var i = 0; i \u003c arr.length; i++) { //外层循环管趟数\n    // 每一趟交换几次，外层循环完成i躺，说明有i个元素已被整理好，因此内层循环只需要整理到倒数arr.length - i个元素前即可\n    for (var j = 0; j \u003c arr.length - i; j++) {\n        //内部交换2个变量的值\n        if (arr[j] \u003e arr[j + 1]) {\n            var temp = arr[j];\n            arr[j] = arr[j + 1];\n            arr[j + 1] = temp;\n        }\n    }\n}\nconsole.log(arr)\n```","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/Block-area-%E5%9D%97%E4%BD%9C%E7%94%A8%E5%9F%9F":{"title":"Block area 块作用域","content":"\n- 在 `ES5` 中规定，函数只能在顶层作用域和函数作用域之中声明，不能在块级作用域声明。而在 `ES6` 中引入了块级作用域，允许函数可以在块级作用域中声明。块级作用域之中，函数声明语句的行为类似于 `let`，在块级作用域之外不可引用。\n- 通过`var`声明的变量或者非严格模式下 (non-strict mode) 创建的函数声明**没有**块级作用域。\n- 相比之下，使用 [`let`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/let)和[`const`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/const)声明的变量是**有**块级作用域的。\n- **示例：**\n```js\nlet x = 1;\n{\n  let x = 2;\n}\nconsole.log(x); // 输出 1\n```\n`x = 2`仅限在定义它的块中，`const`的结果也是一样的。\n\n- 一般考虑到兼容等问题，我们应该避免在块级作用域内声明函数。如果确实需要，也应该写成函数表达式，而不是函数声明语句。\n- **示例：**\n上述代码使用函数表达式来写：\n\n```js\n{\n    if(true){\n        let test = function (){\n            console.log(\"你好！\");\n        };\n    }\n}\n```\n除此之外，还有一个地方我们需要注意一下， `ES6` 的块级作用域必须有大括号，如果没有大括号，`JavaScript` 引擎就认为不存在块级作用域。","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/Function-%E5%87%BD%E6%95%B0":{"title":"Function 函数","content":"\n## 什么是函数\n- 函数：封装了一段可被重复调用执行的代码块。通过此代码块可以实现大量代码的重复使用。\n- 封装：吧一个或多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口。\n```js\n//声明函数\nfunction 函数名(参数1, 参数2) {\n//函数体\n}\n//调用函数\n函数名(参数1, 参数2) \n```\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220818153408.png)\nage is the variable to save returned value(function output)\n\n## 函数声明\n```js\nfunction fnName () {…};\n```\n\n使用function关键字声明一个函数，再**指定一个函数名**，叫函数声明。\n\n## 函数表达式\n\n```javascript\nconst fnName = function () {…};\n```\n\n使用function关键字声明一个函数，但未给函数命名，最后**将匿名函数赋予一个变量**，叫函数[表达式](https://so.csdn.net/so/search?q=%E8%A1%A8%E8%BE%BE%E5%BC%8F\u0026spm=1001.2101.3001.7020)，这是最常见的函数表达式语法形式。\n\n如果实参的个数多余形参，会取到形参的个数。如果实参的个数小于形参，形参可以看作是不用声明的变量，未被实参取到的参数是一个变量但没有接受值，多于的形参定义为undefined，最终的结果就是NaN。\n\n## return\n1. return后面的代码不会被执行，return有终止函数的功能\n```js\nfunction sum(x, y) {\nreturn x + y //return后面的代码不会被执行\nalert('alert')\n}\n```\n2. return只能返回一个值。可以返回数组。\n```js\nfunction fn(x, y) {\nreturn x, y;\n}\nconsole.log(fn(1, 2)) //return返回的结果是最后一个值\n\n```\n3. 如果函数有return则返回return的值，无return则返回undefined。\n- break：结束当前的循坏体（如for、while）\n- continue：跳出本次循环，继续执行下次循环\n- return：不仅可以退出循环，还能够返回return语句中的值，同时还可以结束当前函数体内的代码\n## arguments的使用\n当我们不确定有多少个参数传递的时候可以用arguments来或许，在JS中arguments世界上是当前函数的一个内置对象。所有函数都内置了一个arguments对象，其储存了传递的所有实参。\n\narguments展示形式是一个伪数组，因此可以进行遍历。伪数组具有以下特点：\n- 具有length属性\n- 按索引方式存储数据\n- 不具有数组的push、pop等方法\n## 匿名函数\n\n```javascript\nfunction () {}; \n```\n\n使用function关键字声明一个函数，但未给函数命名，所以叫匿名函数，匿名函数属于函数表达式，匿名函数有很多作用，赋予一个变量则创建函数，赋予一个事件则成为事件处理程序或创建闭包等等。\n\n匿名函数可以直接传递`返回值`做为函数的实参，普通函数作为实参传递的是`一整个函数`而不是返回值\n\n## 箭头函数\nES6标准新增了一种新的函数：Arrow Function（箭头函数）。\n\n为什么叫Arrow Function？因为它的定义用的就是一个箭头：\n\n```js\nx =\u003e x * x\n```\n\n上面的箭头函数相当于：\n\n```js\nfunction (x) {\n    return x * x;\n}\n```\n\n箭头函数相当于匿名函数，并且简化了函数定义。箭头函数有两种格式，一种像上面的，只包含一个表达式，连`{ ... }`和`return`都省略掉了。还有一种可以包含多条语句，这时候就不能省略`{ ... }`和`return`：\n\n```js\nx =\u003e {\n    if (x \u003e 0) {\n        return x * x;\n    }\n    else {\n        return - x * x;\n    }\n}\n```\n\n如果参数不是一个，就需要用括号`()`括起来：\n\n```js\n// 两个参数:\n(x, y) =\u003e x * x + y * y\n\n// 无参数:\n() =\u003e 3.14\n\n// 可变参数:\n(x, y, ...rest) =\u003e {\n    var i, sum = x + y;\n    for (i=0; i\u003crest.length; i++) {\n        sum += rest[i];\n    }\n    return sum;\n}\n```","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/H5C3-Tips-P1-200":{"title":"H5C3 Tips P1-200","content":"\n## Tips\n\n1. crtl + / 注释\n2. cellpadding=\"10\"单元格边缘和文字之间的距离，cellspacing=\"0\"单元格与单元格之间的空隙\n3. \u003cdl\u003e自定义列表，与\u003cdt\u003e（定义项目/名字）、\u003cdd\u003e（描述每一个项目/名字）一起使用\n4. CSS内容写在head标签里加一个style标签\n5. 对body进行选择，background-color整体页面的颜色，color是文字部分的颜色\n6. CSS基础选择器\n   1. 标签选择器\n   2. 类选择器 .class，类选择器：样式点定义，结构类调用，一个或多个，开发最常用。不能用标签名字比如.div作为类名\n      1. 使用多个类名用空格隔开\n   3. id选择器，用井号#来定义，结构id调用，**只能调用一次，别人切勿使用。**和Class的区别类似名字和身份证，可以重名但不会有重复的身份证。ID选择器一般用于JS，CSS一般使用类选择器。\n   4. 通配符选择器，星号*，选择所有标签\n7. 符合属性的写法，font: font-style font-weitgh font-size/line-height font-family; 不能换顺序\n8. 开发中最常用的是十六进制颜色\n9. em是一个相对单位，就是当前元素（font-size）1个文字的大小，如果当前元素没有设置大小，就会按照父元素的一个文字大小\n10. CSS引入方式\n      1. CSS三种样式表\n         1. 行内样式表（行内式）\n            1. 直接在标签内写一个style属性\n         2. 内部样式表（嵌入式）\n            1. 可以放在HTML文档中的任何地方，但一般写在\u003chead\u003e\u003cstyle\u003e\u003c/style\u003e\u003c/head\u003e之中\n            2. 通过这种方式可以方便控制整个页面中的元素样式设置\n            3. 代码结构清晰，但是并没有实现结构与样式的完全分离\n         3. 外部样式表（链接式）\n            1. `\u003clink rel=\"stylesheet\" href=\"styles/style.css\"\u003e`\n\n\n\n```\n\n    \u003ctable\u003e\n        \u003c!-- 用colgroup定义每一列的样式 --\u003e\n        \u003ccolgroup\u003e\n          \u003ccol span=\"2\"\u003e\n          \u003ccol style=\"background-color:#97DB9A;\"\u003e\n          \u003ccol style=\"width:112px;\"\u003e\n          \u003ccol style=\"background-color:#97DB9A;\"\u003e\n          \u003ccol style=\"background-color:#DCC48E; border:4px solid #C1437A;\"\u003e\n          \u003ccol span=\"2\" style=\"width:42px;\"\u003e\n        \u003c/colgroup\u003e\n        \u003ctr\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003cth\u003eMon\u003c/th\u003e\n          \u003cth\u003eTues\u003c/th\u003e\n          \u003cth\u003eWed\u003c/th\u003e\n          \u003cth\u003eThurs\u003c/th\u003e\n          \u003cth\u003eFri\u003c/th\u003e\n          \u003cth\u003eSat\u003c/th\u003e\n          \u003cth\u003eSun\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003cth\u003e1st period\u003c/th\u003e\n          \u003ctd\u003eEnglish\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003eGerman\u003c/td\u003e\n          \u003ctd\u003eDutch\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003cth\u003e2nd period\u003c/th\u003e\n          \u003ctd\u003eEnglish\u003c/td\u003e\n          \u003ctd\u003eEnglish\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003eGerman\u003c/td\u003e\n          \u003ctd\u003eDutch\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003cth\u003e3rd period\u003c/th\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003eGerman\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003eGerman\u003c/td\u003e\n          \u003ctd\u003eDutch\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003cth\u003e4th period\u003c/th\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003eEnglish\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003eEnglish\u003c/td\u003e\n          \u003ctd\u003eDutch\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n          \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n  \n```\n\n## CSS样式\n\n- text-decoration: none; 取消下划线\n\n## Emmet语法\n  - 想生成多个标签，div*5 + Tab\n  - 父子级，兄弟关系，用+号。ul\u003eli，div+span + Tab\n  - .demo + tab\n  - Shift+Alt+F 对齐代码\n\n## CSS的复合选择器\n### 后代选择器\n\n元素1 元素2 { }\n\n```\nul li { } \n\u003c!-- 选择ul里面*所有*的li标签 --\u003e\n```\n\n### 子代选择器\n\n```\ndiv\u003ep {\n\n}\n\u003c!-- 只选择最近的那个标签 --\u003e\n```\n\n### 并集选择器\n\n```\ndiv ,\np\n.pig li {\n  color: pink;\n}\n\u003c!-- 语法规范是竖着写 --\u003e\n```\n\n### 伪类选择器\n\n用于向某些选择器添加特殊的效果，比如给链接增加特殊效果，或选择第1个，第n个元素。\n\n书写最大特点是用（：）表示，比如:hover、:first-child\n\n1. 链接伪类\n- a:link 选择所有未被访问的链接\n- a:visited 选择所有已被访问的链接\n- a:hover 选择鼠标指针位于其上的链接\n- a:active 选择活动链接，鼠标按住瞬间的样式\n选择伪类需要按照上述顺序设置（口诀love hate）\n\n2. focus伪类选择器\n用于选取获得焦点的表单元素\n焦点就是光标，一般情况\u003cinput\u003e类表单才能获取，因此这个选择器业主要针对于表单元素来说。\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220802001413.png)\n\n\n### 选择器权重\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220805123200.png)\n\n!important 使用：\n\ndiv {\n  color: pink!important;\n}\n\n- 复合选择器会有权重叠加的问题\n\n## 文字行高 text-height\n\na链接用line-height\n\n如何实现文字垂直居中\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220804221046.png)\n\n## 背景图片位置\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220804223033.png)\n\n小的图标一般都是用background-image实现的，默认平铺，用background-repeat: no-repeat取消平铺，background-position定位\n\n\n\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/H5Html5+CSS3P1-200":{"title":"H5(Html5)+CSS3：P1-200","content":"\n## 创建实线\n⏰Created Time：2022年8月5日\n✅Origin：[使用 CSS 渐变 - CSS（层叠样式表） | MDN](https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Images/Using_CSS_gradients)\n\n要在两种颜色之间创建一条硬线，即创建一个条纹而不是逐渐过渡，可以将相邻的颜色停止设置为相同的位置。在此示例中，两种颜色在 50% 标记处共享一个颜色停止点，即渐变的一半：\n\n```css\n.striped {\n   background: linear-gradient(to bottom left, cyan 50%, palegoldenrod 50%);\n}\n```\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220805135435.png)\n显示效果\n\n用这个修改了Obsidian的各级Header背景色，比如：\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220805135533.png)\n\n```\nbackground: linear-gradient(to bottom, transparent 50%, pink 50%);\n```\n\n## boarder-collapse\n合并表格边缘线\n\n# 外边距Margin\n\n## 块级盒子水平居中\n1. 盒子必须指定了宽度width\n2. 盒子左右外边距都设置为auto\n```\nwidth: 960px;\nmargin: 0 auto; \n最常见的写法，上下外边距为0，左右为auto\n```\n以上方法是让块级元素水平居中，行内元素或者行内块元素居中给其父级元素添加`text-align: center;`即可。这个不止让文本居中，也可以让图片等其他元素居中。\n\n## 嵌套块元素垂直外边距的塌陷\n对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。\n\n![|500](https://raw.githubusercontent.com/Meyerclex/image/main/20220805234733.png)\n- 解决方案（三选一）：\n1. 为父元素定义上边框`border: 1px solid transparent;`\n2. 为父元素定义上内边距`padding: 1px;`\n3. 为父元素添加`overflow: hidden;`，常用方案\n\n**浮动的盒子不会有外边距的问题**\n\n## 清除内外边距和多余样式\n网页元素很多都带有默认的内外编剧，而且不同浏览器默认的也不一致。因此布局前首先要清楚下网页元素的内外边距。\n```HTML\n* {\n\tpadding: 0;\n\tmargin: 0;\n}\nli {\n\tlist-style: none;\n}\n```\n行内元素（比如`span`）为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距，但是转换为块级和行内块元素就可以了。\n\n## CSS实现图片裁剪居中（图片不变形）\n为了避免变形，我们可以使用css中object-fit属性\n\u003e **`object-fit`** [CSS](https://links.jianshu.com/go?to=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS) 属性指定[可替换元素](https://links.jianshu.com/go?to=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2FReplaced_element)的内容应该如何适应到其使用的高度和宽度确定的框。\n```html\n\u003cdiv class=\"test_img\"\u003e\n\t\u003cimg src=\"../assets/images/img1.jpg\" alt=\"\"\u003e\n\u003c/div\u003e\n\u003cdiv class=\"test_img\"\u003e\n    \u003cimg src=\"../assets/images/img2.jpg\" alt=\"\"\u003e\n\u003c/div\u003e\n\u003cdiv class=\"test_img\"\u003e\n    \u003cimg src=\"../assets/images/img3.jpg\" alt=\"\"\u003e\n\u003c/div\u003e\n```\n```css\n.test_img{\n  width: 200px;\n  height: 100px;\n  border: 1px solid #000;\n  margin-top: 5px;\n  img{\n    width:100%;\n    height: 100%;\n    object-fit:cover;\n  }\n}\n```\n\n## 圆形\n```css\n.div {\n\twidth: 200px;\n\theight: 200px;\n\tborder-radius: 50%;\n}\n```\n\n## 盒子阴影\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220807091038.png)\n- 盒子阴影不占用空间，不影响其他盒子的排列\n- 默认的是外阴影outset，但是不可以写这个单词，否则导致阴影无效\n\n## 浮动 float\nfloat属性用于创建浮动框，将其移动到一边，直至左边缘或右边缘触及包含块或另一个浮动框的边缘。\n![效果|200](https://raw.githubusercontent.com/Meyerclex/image/main/20220807094917.png)\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220807093909.png)\n\n- 浮动的盒子不再保留原先的位置。效果：\n```css\n        .float {\n            float: left;\n            background-color: pink;\n            width: 300px;\n            height: 500px;\n        }\n\n        .fix {\n            background-color: cyan;\n            width: 500px;\n            height: 600px;\n        }\n```\n```html\n    \u003cdiv class=\"float\"\u003e\u003c/div\u003e\n    \u003cdiv class=\"fix\"\u003e\u003c/div\u003e\n```\n\n- 浮动元素会具有行内块元素特性\n\t- 任何元素都可以浮动，不管原先是什么模式的元素，添加浮动之后具有行内块元素相似的特性\n\t- 如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定。（p标签：**块级元素**，默认宽度占满一行。）\n\t- 浮动的盒子中间没有缝隙，是紧挨在一起的。\n- 浮动元素经常和标准流父级搭配使用\n\t- 为了约束元素位置，我们网页布局一般采取的策略是：先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置，符合网页布局第一准则。\n- 网页布局第二准则：先设置盒子大小，之后设置盒子的位置。\n\n## 清除浮动\n父级盒子在很多情况下不方便给高度（例如卡片商品可能需要不断上新），但是子盒子浮动又不占有位置，最后父级盒子高度为0时，就会影响下面的标准流盒子。\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220809215521.png)\n### 为什么要清除浮动\n通常我们在写html+css的时候，如果一个父级元素内部的子元素是浮动的（float），那么常会发生父元素不能被子元素正常撑开的情况，可以看到，content这个父元素完全没有被子元素撑开（我定义content元素背景为黑色，有边框，现在只显示了一条线）；\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220811154452.png)\n\n\n### 解决办法 清除浮动\n1. 额外标签法\n\t1. 再浮动元素末尾添加一个空的标签例如`\u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e`\n\t2. 新增的标签必须是块级元素而不是行内元素\n\t3. 添加许多无意义的标签，结构化较差\n2. 将其属性值设为hidden、auto或scroll\n\t1. 代码简洁\n\t2. 无法显示溢出的部分\n3. `:after`伪元素法\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220809220557.png)\n\n4. 双伪元素清除浮动\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220809220844.png)\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220811154147.png)\n\n\n## CSS属性书写顺序\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220810002953.png)\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/H5Html5+CSS3P200-P275":{"title":"H5(Html5)+CSS3：P200-P275","content":"\n## 学成在线案例\n### 导航栏\n1. 实际开发中我们不会直接使用链接a，而是使用li包含链接（li+a）的做法。\n\t1. li+a语义更加清晰，一看就是有条理的列表型内容\n\t2. 如果直接使用a，搜索引擎容易识别为有堆砌关键字嫌疑，从而影响网站排名\n\t3. B站的导航栏就是用li+a实现的![](https://raw.githubusercontent.com/Meyerclex/image/main/20220810131838.png)\n2. 让nav中的连接横向显示\n\t1. 让nav中的li向左浮动\n\t2. 让inline的a显示为block/inline-block，成为一个盒子\n\t3. a链接字数不一样多所以不方便给宽，所以可以用padding\n\n### Banner\n**只有当`li`设定了宽度，设定padding值时才会撑开盒子**\n\n## 图片垂直居中\n```\n.user img {\n    vertical-align:middle;\n    margin-right: 10px;\n}\n```\n\n## 定位\n1. Static 静态定位 默认\n2. 相对定位relative\n   1. `{position: relative;}`\n   2. 相对定位是元素在移动位置的时候，相对于它原来的位置\n   3. 原来在标准流占有的位置继续占有，后面的盒子仍然以标准流方式来对待它。不脱标，继续保留原来位置。\n3. 绝对定位 absolute\n   1. `position: absolute;`\n   2. 相对于它的祖先元素而言的。\n   3. 如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位（Document文档）。\n   4. 只要祖先元素有定位（绝对、相对、固定）则以**最近一级的**有定位的祖先元素为参考点移动位置。\n   5. 脱标，不再占有原来的位置。\n4. fixed 固定定位\n\t1. 它是一种特殊的绝对（`absolute`）定位，将元素相对于浏览器窗口定位。 类似于绝对位置，它与 CSS 偏移属性一起使用，并且也会将元素从当前的文档流里面移除。 其它元素会忽略它的存在，这样也许需要调整其他位置的布局。\n\t2. 但 `fixed` 和 `absolute` 的最明显的区别在于，前者定位的元素不会随着屏幕滚动而移动。\n\t3. 不会占有位置。\n\t4. 还可以跟版心右侧位置。\n\t\t1. 让固定盒子`left: 50%;`走到中间位置，让`margin-left: 版心宽度的一半距离`。\n5. sticky 粘性定位\n\t1. 以浏览器的可视窗口为参照点移动元素\n\t2. 占有原先位置\n\t3. 必须添加top left right bottom任意一个才能起效果，如果top为0.则意味着页面滚动到定位`top: 0;`时停止\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220814205928.png)\n\n### 子绝父相的由来\n子级是绝对定位的话，父级要用相对定位。\n1. 子级绝对定位，不会占有位置，可以放到父盒子重任何一个地方，不会影响其他的兄弟盒子。（浮动只会影响后面的盒子）\n2. 父盒子一定要加定位，限制子盒子。\n\n## 定位叠放次序 z-index\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220815140427.png)\n只有定位的盒子才有z-index属性\n### 定位的拓展\n1. 绝对定位的盒子居中\n\t1. 加了绝对定位的盒子不能通过`margin: auto;`来水平居中，但可以通过一下计算方法实现水平和垂直居中。\n\t\t1. 父容器的50%。此时会偏一个宽度。\n\t\t2. margin负值往左边走，自己盒子的一半。\n2. 行内元素添加绝对或固定定位，可以直接设置高度和宽度\n3. 块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小\n4. 脱标的盒子不会触发外边距塌陷\n\n#### 绝对定位（固定定位）会完全压住盒子\n- 浮动float脱标会压住下方标准流的盒子，但不会压住文字，因为是用来做环绕文字的。\n- 绝对定位会压住标准流的所有内容\n\n## 元素的显示与隐藏\n让一个元素在页面中隐藏或者显示出来\n1. display 显示隐藏\n2. visibility 显示隐藏\n3. overflow 溢出显示隐藏\n### display属性（重要）\n1. `display: none;`隐藏对象，==隐藏之后位置不保留==\n2. `display: block;`除了转换为块级元素以外，同时还有显示元素的意思\n### visibility 可见性\n1. `visibility: visible;`元素可视\n2. `visibility: hidden;`元素隐藏，隐藏后==继续占有原来的位置==\n### overflow 溢出\noverflow属性指定了如果内容溢出一个元素的框（超过其指定高度及宽度）时会发生什么\n1. visible 不见且内容也不添加滚动条，默认值。\n2. hidden 不显示超过对象尺寸的内容。把多出来的部分隐藏。\n3. scroll 溢出的部分显示滚动条（不超出也增加滚动条，且是上下滚动和左右滚动条）\n4. auto 在需要的时候增加滚动条\n有定位的盒子慎用`overflow: hidden;`会隐藏掉多余的部分，例如卡片上的hot/new标签\n\n## 精灵图\n主要借助`background-position`、`background-image`实现，一般精灵图都是负值。\n使用同一张精灵图的多个图片，可以简化代码将所引用的bgi放到同一个class里，然后只设定`background-position`。\n## iconfont字体图标\n展示的是图标，本质上是字体。\n### 字体图标的优点：\n1. 轻量级：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器的请求。\n2. 灵活性：本质上是文字，可以随意改变颜色、产生阴影、透明效果、旋转etc\n3. 兼容性：几乎支持所有的浏览器。\n结构简单：字体图标\n结构复杂的小图片：精灵图\n### 字体图标的下载\n[iconmoon](http://iconmoon.io)\n[阿里 iconfont字体库](http://iconfont.cn)\n### 字体图标的引入\n把fonts文件夹放在网站根目录\n```css\n@font-face {\nfont-family: 'icomoon';\nsrc: url('');\nsrc: url('') format('');\nfont-weight: normal;\nfont-style: normal;\nfont-display: block;\n}\n```\n下载下来的字体图标安装包会有css？\n把方框复制过来之后，去把font-family设置为下载下来的。\n\n## 三角的做法\n![|300](https://raw.githubusercontent.com/Meyerclex/image/main/20220815225604.png) ![](https://raw.githubusercontent.com/Meyerclex/image/main/20220815225635.png)\n给一个没有大小的盒子指定边框，每一个边框本质都是三角形。将其他边框设置为透明。\n![|300](https://raw.githubusercontent.com/Meyerclex/image/main/20220815225810.png)\n![|300](https://raw.githubusercontent.com/Meyerclex/image/main/20220815225914.png)\n绝对定位把三角固定在盒子上，子绝父相。\n（行高和font-size是为了兼容不同浏览器）\n\n## 鼠标样式 cursor\n`li {cursor: pointer;}`\ndefault: 小白默认\npointer: 小手\nmove: 移动\ntext: 文本\nnot-allowed: 禁止\n\n## 表单轮廓线 outline\n给表单添加`outline: 0;/outline: none;`可以去掉默认的蓝色边框。\n\n## 防止拖拽文本域 resize\n`resize: none;` 取消显示文本域`\u003ctextarea\u003e\u003c/textarea\u003e`的右下角拖动调整大小的边角。\n## vertical-align 属性应用\n- CSS的`vertical-align`属性使用场景：经常用于设置图片或者表单（行内块元素）和文字垂直对齐。\n- 官方介绍：用于设置一个元素的垂直对齐方式，但是它只针对于==行内元素或者行内块元素==有效。\n![|500](https://raw.githubusercontent.com/Meyerclex/image/main/20220815234141.png)\n ![|250](https://raw.githubusercontent.com/Meyerclex/image/main/20220815234740.png)\n 图片img加了vertical-align: middle的居中效果\n如果图片是background-image，要先转为display: inline-block;在加上垂直居中。\n### 解决图片底部默认空白缝隙问题\n出现原因：行内块元素默认是和文字基线对齐的\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220815235414.png)\n解决方案：\n1. 给图片添加`vertical-align: top/middle/bottom;`等（提倡使用的）。\n2. 把图片转换为块级元素：`display: block;`\n### 溢出的文字省略号显示\n1. 单行文本\n![|400](https://raw.githubusercontent.com/Meyerclex/image/main/20220816000241.png)\n2. 多行文本\n有较大的兼容性问题，适合于webKit浏览器或者移动端（移动端大部分是webKit内核）\n![|400](https://raw.githubusercontent.com/Meyerclex/image/main/20220816000723.png)\n然后设置宽高遮住多出的行数？\n更推荐让后台人员来做这个效果。\n\n## margin的负值运用\n两个盒子都有边框，相邻的边框会变成2px\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816001305.png)\n- 可以把右边的盒子设置为margin: -1px; 让右边盒子往左移动1像素，压住左边的盒子\n- 如果想要hover边框变色的效果，提高当前盒子的层级，加relative定位，相对定位会压住其他的标准流（保留原来的位置），使得被压住的那一边上来。\n\t- 如果已经有定位了，则使用z-index提高层级\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816002349.png)\n\n## 常见的布局技巧\n1. 文字围绕浮动元素\n文字不会压住浮动元素\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816003030.png)\n\n3. 三角强化\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816003902.png)\n蓝色三角如何画出？\n同样是没有宽高，设置四边边框，底部边框为0，加高上边框。transparent隐藏上边框。\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816004138.png)\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816004157.png)\n代码简化：\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816004506.png)\n三角可以用i标签\n\n## CSS初始化\n不同浏览器对有些标签的默认值不同，为消除不同浏览器对HTML文本呈现的差异，照顾浏览器的兼容，我们需要对CSS初始化。\n简单理解：CSS初始化是指重设浏览器的样式。也成为CSS reset\n每个网页都必须首先进行CSS初始化\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816011154.png)\n### unicode编码字体\n把中文字体的名称用相应的unicode编码来代替，这样就可以有效地避免浏览器解释css代码时出现乱码的问题。\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816011638.png)\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/H5Html5+CSS3P275":{"title":"H5(Html5)+CSS3：P275-","content":"\n## HTML5 新特性\n- 增加了一些新的表单、新的标签和新的表单属性。新特性都有兼容性问题，IE9+以上版本的浏览器才支持，不考虑兼容性可以大量使用这些新特性。\n### 新增的语义化标签\n- div队与搜索引擎来说，是没有语义的。HTML5新增的语义化标签有：\n\t- `\u003cheader\u003e`\n\t- `\u003cnav\u003e`\n\t- `\u003carticle\u003e`内容标签\n\t- `\u003csection\u003e`定义文档某个区域\n\t- `\u003caside\u003e`侧边栏标签\n\t- `\u003cfooter\u003e`\n![|400](https://raw.githubusercontent.com/Meyerclex/image/main/20220816114117.png)\n\n## CSS3新特性\n### 属性选择器\n可以跟据元素特定属性来选择元素。\n![|400](https://raw.githubusercontent.com/Meyerclex/image/main/20220816121007.png)\n类选择器、属性选择器、伪类选择器，权重为10。\n### 结构伪类选择器\n![|450](https://raw.githubusercontent.com/Meyerclex/image/main/20220816122303.png)\nnth-child(n)选择某个父元素的一个或多个特定的子元素\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816124312.png)\n\n- n可以是数字，关键字和公式\n- n如果是数字，就是选择第n个子元素，里面数字从1开始\n- n可以是关键字：even偶数，odd奇数\n- n可以是公式：常见的公式如下（如果n是公式，则从0开始计算，但是第0个元素或者超出了元素的个数会被忽略）\n\t- ![|300](https://raw.githubusercontent.com/Meyerclex/image/main/20220816123354.png)\n## 伪元素选择器（重点）\n伪元素选择器可以帮助我们利用CSS创建新标签元素而不需要HTML标签，从而简化HTML结构。\n- CSS3语法一般是双冒号写法\n- CSS2过时语法是但冒号写法\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816125927.png)\n反斜杠转义\n![|450](https://raw.githubusercontent.com/Meyerclex/image/main/20220816135339.png)\n\n## CSS3盒子模型\nCSS3中可以通过`box-sizeing`来指定盒子模型。\n1. box-sizing: content-box 盒子大小为width+padding+border\n2. box-sizing: border-box 盒子大小为width\n\t1. 如果盒子模型我们该为了box-sizing: border-box，那么padding和border就不会撑大盒子了。前提padding和border不会超过width宽度\n\n## CSS3其他特性\n- 模糊特效 filter: blur();\n\t- ![|450](https://raw.githubusercontent.com/Meyerclex/image/main/20220816142439.png)\n- calc 函数\n\t- ![|450](https://raw.githubusercontent.com/Meyerclex/image/main/20220816143730.png)\n## CSS3 过渡\n`transition: 要过渡的属性 花费时间 运动曲线 何时开始;`\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816144559.png)\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816145633.png)\n- 谁做过渡给谁加\n- 写多个属性，利用逗号分隔\n- 多个属性都变化，属性写all即可\n\n## HTML5\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816151755.png)\n\n## 品优购项目\n### 模块化开发\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816154441.png)\n### 网站TDK三大标签SEO优化\nTDK：title、description、keyword\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816171539.png)\n### 常见类名\n![|450](https://raw.githubusercontent.com/Meyerclex/image/main/20220816171944.png)\n\n## Shortcut\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816173941.png)\n竖线的常用做法是一个1px的盒子。\n\n## LOGO SEO优化\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220816203130.png)\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/Loop-%E5%BE%AA%E7%8E%AF":{"title":"Loop 循环","content":"\n## for\n```js\nfor (初始化变量; 条件表达式; 操作表达式) {\n//循环体\n}\n```\n1. 初始化变量就是用var生命的一个普通变量，通常用于作为计数器使用\n2. 条件表达式就是用来决定每一次循环是否继续执行，就是终止的条件\n3. 操作表达式 是每次循环最后执行的代码，经常用于我们计数器变量进行更新（递增或者递减）\n```js\nfor (var i = 1; i \u003c= 100; i++) {\n console.log('hello')\n}\n```\n1. 首先执行里面的计数器变量 `var i = 1`但是这句话在for里面只执行一次，i是index的意思。\n2. 去`i\u003c=100`来判断是否满足条件，满足执行循环体，不满足结束\n3. 最后去执行 `i++` 第一轮结束\n4. 接着去执行`i\u003c=100`\n\n### 执行不同的代码\n```js\nfor (var i = 1; i \u003c= 100; i++) {\n    if (i == 1) {\n        console.log('1岁')\n    } else if (i == 100) {\n        console.log('100岁')\n    } else {\n        console.log('这个人今年' + i + '岁了')\n    }\n}\n```\n\n### 习题\n1. 求1-100之间奇数之和、偶数之和\n```js\nvar even = 0;\nvar odd = 0;\nfor (var i = 1; i \u003c= 100; i++) {\n if (i % 2 == 0) {\n even = even + i;\n}\n} else {\n odd = odd + i;\n}\n```\n2. 求1-100之间所有能被3整数的数字和\n```js\nvar result = 0;\nfor (var i = 1; i \u003c= 100; i++) {\n\tif (i % 3 == 0) {\n\tresult = result + i;\n\t}\n}\n```\n3. 计算班级平均分\n```js\nvar num = prompt('请输入班级总人数')\nvar sum = 0;\nvar average = sum / num;\nfor (var i = 1; i \u003c= num; i++) {\n        var score = prompt('请输入第' + i + '个学生的成绩');\n        sum += parseFloat(score) //string转换为number\n    } \n    average = sum / num;\n    alert(`共有${num}人，平均值是${average}`)\n```\n4. 一行打印五颗行星\n```js\nvar str = ''\nfor (var i = 1; i  \u003c= 5; i++) {\n\tstr += '⭐'\n}\nconsole.log(str);\n```\n\n#### String转为Number\n[Number( )、parseInt( )、parseFloat( )的用法及区别](https://segmentfault.com/a/1190000020008733)\n\n### 双重for循环执行过程\n![|500](https://raw.githubusercontent.com/Meyerclex/image/main/20220820134745.png)\n![|500](https://raw.githubusercontent.com/Meyerclex/image/main/20220820135311.png)\n\n1. 打印五行五列星星\n```js\nfor (var i = 1; i \u003c=5; i++) { //外部循环负责打印五行\n\tfor (var j = 1; j \u003c= 5; j++) {\n\tstr += '⭐' \n\t}\n\t// 如果一行打印完毕5个星星就要另起一行加\\n\n\tstr += '\\n'\n}\n```\n 2. 打印n行n列的星星\n```js\nvar rows = prompt('行数')\nvar cols = prompt('列数')\nvar str = '';\nfor (var i = 1; i \u003c= rows; i++) {\n\tfor (var j = 1; j \u003c= cols; j++) {\n\tstr += '*';\n\t}\n\tstr += '\\n';\n}\nconsole.log(str)\n```\n3. 打印倒三角形\n```js\nvar str = '';\nfor (var i = 1; i \u003c= 10; i++) { //外层循环控制行数\n\tfor (var j = i; j \u003c=10; j++) { //内层循环控制个数\n\tstr += '♥'\n\t}\n\tstr += '\\n';\n}\n// 当i=1的时候，内层循环j = i = 1，始终小于10，j++，反复打印星星，一直加到j=10，不再满足条件，换行，内部循环了十次，外部开始循环第二次，i=2，内部再次循环。\n```\n4. 打印九九乘法表\n- 一共有九行，但是每行个数不一样，因此需要用到双重佛如循环\n- 外层循环控制行数i，循环9次，打印9行\n- 内层的for循环控制每行公式j\n- 核心算法：每一行公式的个数正好和行数一致，j\u003c=i\n- 记得换行\n```js\nvar str = '';\nfor (var i = 1; i \u003c= 9; i++) { //i=行数\n\tfor (var j = 1; j \u003c= i; j++) { //j代表列数（一行的个数）\n\tstr += j + 'x' + i + '=' + j * i + ' '\n\t}\n\tstr += '\\n'\n}\nconsole.log(str)\n```\n![|500](https://raw.githubusercontent.com/Meyerclex/image/main/20220820145040.png)\n\n## While 循环\n![|550](https://raw.githubusercontent.com/Meyerclex/image/main/20220820150049.png)\n\n### While循环习题\n1. 打印1-100岁\n```js\nvar i = 1;\nwhile (i\u003c=100) {\nconsole.log('今年'+ i +'岁')\ni++\n}\n```\n2. 计算1-100之间所有整数的和\n```js\nvar j = 1;\nvar sum = 0;\nwhile (j \u003c= 100) {\nsum += 1;\n}\nconsole.log(sum)\n```\n3. 暗号练习\n```js\nvar message = prompt('暗号')\nwhile (message !== 'die hard') {\n\tmessage = prompt('重新输入')\n}\n```\n\n## do while\n```js\ndo {\n\t//循环体\n} while (条件表达式)\n//代码验证\nvar i = 1\ndo {\n\tconsole.log('print')\n\ti++; //否则死循环\n} while (i \u003c= 10);\n```\n- 与while不同的地方先执行一次循环体，再判断条件。\n- 如果条件表达式结果为真，则继续执行循环体，否则结束循环。\n- 至少执行一次\n#### do while 暗号练习\n```js\ndo {\n\tvar message = prompt('test')\n} while (message !== 'die hard')\n```\n\n## continue关键字\n只要遇见continue就立即退出当前次循环\ne.g: 吃五个包子，吃到第三个发现continue，跳过第三个不吃，吃第四第五个。\n```js\nfor (var i = 1; i \u003c= 5; i++) {\n\tif (i == 3) {\n\tcontinue\n\t}\n\tconsole.log(''+ i +''次循环)\n}\n```\n### 习题\n1. 求1-100之间，除了能被7整除以外的整数和\n```js\nvar sum = 0;\nfor (var i = 1; i \u003c= 100; i++) {\n\tif (i % 7 == 0) { //双等号\n\tcontinue;\n\t}\n\tsum += i;\n}\nconsole.log(sum)\n```\n## break关键字\nbreak关键字用于立即跳出整个循环（循环结束）。\ne.g: 吃五个包子，吃到第三个发现break，剩下的也不吃了。","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/Object-%E5%AF%B9%E8%B1%A1":{"title":"Object 对象","content":"\n键值对 `property:value`\n\n## Key Point\n- 和Array最大的差别在于，Object中属性顺序不重要，Array的顺序非常重要，因为它是我们访问元素的方式\n\n## 用法\n```js\nvar xiaoming = {\n    name: '小明',\n    birth: 1990,\n    school: 'No.1 Middle School',\n    height: 1.70,\n    weight: 65,\n    score: null\n};\nxiaoming.name; // '小明'\nxiaoming.birth; // 1990\n```\n\n## 特殊命名\n访问属性是通过`.`操作符完成的，但这要求属性名必须是一个有效的变量名。如果属性名包含特殊字符，就必须用`''`括起来：\n\n```js\nvar xiaohong = {\n    name: '小红',\n    'middle-school': 'No.1 Middle School'\n};\n```\n`xiaohong`的属性名`middle-school`不是一个有效的变量，就需要用`''`括起来。访问这个属性也无法使用`.`操作符，必须用`['xxx']`来访问：\n```js\nxiaohong['middle-school']; // 'No.1 Middle School'\nxiaohong['name']; // '小红'\nxiaohong.name; // '小红'\n```\n\n由于JavaScript的对象是动态类型，你可以自由地给一个对象添加或删除属性：\n\n```js\nvar xiaoming = {\n    name: '小明'\n};\nxiaoming.age; // undefined\nxiaoming.age = 18; // 新增一个age属性\nxiaoming.age; // 18\ndelete xiaoming.age; // 删除age属性\nxiaoming.age; // undefined\ndelete xiaoming['name']; // 删除name属性\nxiaoming.name; // undefined\ndelete xiaoming.school; // 删除一个不存在的school属性也不会报错\n```\n\n如果我们要检测`xiaoming`是否拥有某一属性，可以用`in`操作符：\n\n```js\nvar xiaoming = {\n    name: '小明',\n    birth: 1990,\n    school: 'No.1 Middle School',\n    height: 1.70,\n    weight: 65,\n    score: null\n};\n'name' in xiaoming; // true\n'grade' in xiaoming; // false\n```\n\n不过要小心，如果`in`判断一个属性存在，这个属性不一定是`xiaoming`的，它可能是`xiaoming`继承得到的：\n\n```js\n'toString' in xiaoming; // true\n```\n\n因为`toString`定义在`object`对象中，而所有对象最终都会在原型链上指向`object`，所以`xiaoming`也拥有`toString`属性。\n\n要判断一个属性是否是`xiaoming`自身拥有的，而不是继承得到的，可以用`hasOwnProperty()`方法：\n\n```js\nvar xiaoming = {\n    name: '小明'\n};\nxiaoming.hasOwnProperty('name'); // true\nxiaoming.hasOwnProperty('toString'); // false\n```\n\n## 构造函数\n因为一次创建一个对昂，里面很多的属性和方法是大量相同的，因此可以利用函数的方法重复相同的代码，我们把这个函数成为构造函数。因为这个代码不一样，里面封装的不是普通的代码，而是对象。构造函数就是把对象里面一些相同的属性和方法抽象出来封装到函数中，。","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/Scope-%E4%BD%9C%E7%94%A8%E5%9F%9F":{"title":"Scope 作用域","content":"\n\n## Scope 作用域\n\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220821165520.png)\n- JS作用域：变量在某个范围内起作用和效果，目的是为了提高程序的可靠性，减少命名冲突。\n\t1. 全局作用域：整个`\u003cscript\u003e`标签，或者是一个单独的JS文件。\n\t2. 局部作用域：在函数内部就是局部作用域，只在函数内部其效果和作用。\n- 变量作用域\n\t- 全局变量：全局作用域下的变量。如果在函数内部没有声明直接赋值的变量也属于全局变量。\n\t- 局部变量：在局部作用域下的变量，只能在函数内部使用。函数的形参也可以看作是局部变量\n- 从执行效率来看变量作用域\n\t- 全局变量只有浏览器关闭时才销毁，占内存资源\n\t- 局部变量当程序执行完毕就会销毁，节约内存资源\n- [[Block area 块作用域]]\n\n## Scope chain 作用域链\n- 根据内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能被内部函数访问，就成为作用域链。\n- ","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/Study-List":{"title":"","content":"## JS 视频目录及To Do List\n- [x] 变量：P11～19  \n- [x] 数据类型：P20～40  \n- [x] 运算符：P41～54  \n- [ ] 流程控制分支结构：P55～68  \n- [x] 循环：P69～95  \n- [x] 数组：P96～112  \n- [ ] 函数：P113～133  \n- [ ] 作用域：P134～139  \n- [ ] JS预解析：P140～142  \n- [x] 对象：P143～153  \n- [ ] 内置对象：P155～186  \n- [ ] 简单数据类型和复杂数据类型：P187～190  \n- [ ] DOM：P194～265  \n- [ ] 事件高级：P247～265  \n- [ ] BOM：P266～286  \n- [ ] PC端网页特效：P287～329  \n- [ ] 移动端网页特效：P331～353  \n- [ ] 本地存储：P354～357  \n- [ ] jQuery：P358～442  \n- [ ] 数据可视化：P443～473","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/The-complete-JavaScript-Course-2022":{"title":"The complete JavaScript Course 2022","content":"## 7 Primitive Data Types\n1. Number\n2. String 字符串\n3. Boolean：`True`or`False`\n4. Undefined：Value taken by a variable that is not yet defined('empty value')\n5. Null: Also means 'empty value'\n6. Symbol（ES2015）：Value that is unique and cannot be changed[Not useful for now]\n7. BigInt（ES2020）：Larger integers than the Number type can hole\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220811211622.png)\n\n## var let const\n\n### let \u0026 var\n使用 `var` 关键字声明变量的最大问题之一是你可以轻松覆盖变量声明：\n\n```js\nvar camper = \"James\";\nvar camper = \"David\";\nconsole.log(camper);\n```\n\n在上面的代码中，`camper` 变量最初声明为 `James`，然后被覆盖为 `David`。 \n然后控制台显示字符串 `David`。\n\n在小型应用程序中，你可能不会遇到此类问题。 但是随着你的代码库变大，你可能会意外地覆盖一个你不打算覆盖的变量。 由于此行为不会引发错误，因此搜索和修复错误变得更加困难。\n\nES6 中引入了一个名为 `let` 的关键字，这是对 JavaScript 的一次重大更新，以解决与 `var` 关键字有关的潜在问题。 你将在后面的挑战中了解其他 ES6 特性。\n\n如果将上面代码中的 `var` 替换为 `let` ，则会导致错误：\n\n```js\nlet camper = \"James\";\nlet camper = \"David\";\n```\n\n该错误可以在你的浏览器控制台中看到。\n所以不像 `var`，当你使用 `let` 时，同名的变量只能声明一次。\n\n- var是ES6之前的声明方法，尽量不要使用。\n### 使用 const 关键字声明只读变量\n\n关键字 `let` 并不是声明变量的唯一新方法。 在 ES6 中，你还可以使用 `const` 关键字声明变量。\n\n`const` 具有 `let` 的所有出色功能，另外还有一个额外的好处，即使用 `const` 声明的变量是只读的。 它们是一个常量值，这意味着一旦一个变量被赋值为 `const`，它就不能被重新赋值：\n\n```js\nconst FAV_PET = \"Cats\";\nFAV_PET = \"Dogs\";\n```\n\n由于重新分配 `FAV_PET` 的值，控制台将显示错误。\n\n- 你应该始终使用 `const` 关键字命名不想重新分配的变量。 这有助于避免给一个常量进行额外的再次赋值。\n- `const`的特性也意味着我们不能声明空的`const`变量\n- `const`声明的只有原始值primitive value不可更改，但是数组不是原始值，所以我们可以更改\n```js\nconst friends = ['jay', 'alen', 'steven']\ncosole.log(friends) //(3)['jay', 'alen', 'steven']\n\nfriend[2] = 'bob'\ncosole.log(friends) //(3)['jay', 'alen', 'bob']\n```\n\n- 我们可以改变数组，即使他们是用const声明的。但我们不可以替换整个数组，比如：\n```js\nconst friends = ['jay', 'alen', 'steven']\nfriends = ['bob', 'allen'] //会报错\n```\n\n\n\n**注意：** 通常，开发者会用大写字母作为常量标识符，用小写字母或者==驼峰命名==作为变量（对象或数组）标识符。 你将在后面的挑战中了解有关对象、数组以及不可变和可变值的更多信息。 同样在后面的挑战中，你将看到大写、小写或驼峰式变量标识符的示例。\n\n### 声明多个变量\n\n```js\nvar age = 18,\n    address = 'where',\n\tgz = 2000;\n```\n\n### 声明变量的特殊情况\n![](https://raw.githubusercontent.com/Meyerclex/image/main/20220817171503.png)\n\n\n## 数字递增\n\n使用 `++`，我们可以很容易地对变量进行自增或者 +1 运算。\n\n```js\ni++;\n```\n\n等效于：\n\n```js\ni = i + 1;\n```\n\n**注意：**`i++;` 这种写法省去了书写等号的必要。\n\n## 通过索引修改数组中的数据\n\n与字符串不同，数组的条目是 可变的 并且可以自由更改，即使数组是用 `const` 声明的。\n\n**示例**\n\n```js\nconst ourArray = [50, 40, 30];\nourArray[0] = 15;\n```\n\n`ourArray` 值为 `[15, 40, 30]`。\n\n**注意：** 数组名与方括号之间不应该有任何空格，比如 `array [0]` 。 尽管 JavaScript 能够正确处理这种情况，但是当其他程序员阅读你写的代码时，这可能让他们感到困惑。\n\n## 运算符\n最基本的运算符是相等运算符：`==`。  \n值得注意的是相等运算符不同于赋值运算符（`=`），赋值运算符是把等号右边的值赋给左边的变量。\n严格相等运算符（`===`）是相对相等操作符（`==`）的另一种比较操作符。 与相等操作符转换数据两类型不同，严格相等运算符不会做**类型转换**。\n- 加减乘除。\n- 平方`console.log(2 ** 3)`2的三次方。\n\n## 类型转换\n\n```js\nconst inputYear = '1991';\nconsole.log(Number(inputYear), inputYear);\n```\n\n- NaN：not a number实际上是invalid number\n\n```js\nconsole.log(typeof NaN) // number\n```\n\n只能转换String、Number、Booleans\n\n右一个String和plus加号，再加Number数字，会显示为字符串\n```js\nlet n = '1' + 1; // String'11'\nn = n - 1; // '11' - 1;\nconsole.log(n); // 10\n```\n\n## Truthy and Falsy Values\n5个错误的值（falsy values）：`0, '', undefined, null, NaN`\n他们不完全是错误的，单再转化为布尔值时会变为`false`\n任何非零数字或任何非零字符串会被转化为true\n```js\nconsole.log(Boolean(0))\n```\n\n## Switch case break\n如果省略break关键字，就会导致执行完当前case后，继续执行下一个case。\n\n## 条件运算符 condition operator\n变相的if/else，写在同一行上\n```js\nconst age = 23;\nage \u003e= 18 ? console.log('Adult') : console.log('not adult')\n```\n三元运算符\n```js\nconst age = 23;\nconst drink = age \u003e= 18 ? 'Wine' : 'Water';\nconsole.log('drink')\n```\n\n\n## P27/027 Statements and Expression\n表达式与声明\n```js\n1 + 3 // E\nconst A = 13; // S\nif (A\u003eB) {\nconsole.log('A\u003eB')\n} // S\n```\njs expects an expression, not a statement.\n\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (测试)","content":"\n## Chinese, Japanese, Korean Support\n几乎在我们意识到之前，我们已经离开了地面。\n\n우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.\n\n私たちがそれを知るほぼ前に、私たちは地面を離れていました。\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = 0$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nenableSemanticSearch: false\noperandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"🪴 Quartz 3.2\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'مدونتي'\n    weight = 1\n```\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e 🔗 Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n❌ [Excluding pages from being published](notes/ignore%20notes.md)\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: 🎨 [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2022-08-21T13:58:20.377827448Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e “[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.” — Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, here's exactly how to do that!\n\nNote that both of these steps need to be completed.\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null},"/notes/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Create an Operand Account on [their website](https://operand.ai/).\n2. Go to Dashboard \u003e Settings \u003e Integrations.\n3. Follow the steps to setup the GitHub integration. Operand needs access to GitHub in order to index your digital garden properly!\n4. Head over to Dashboard \u003e Objects and press `(Cmd + K)` to open the omnibar and select 'Create Collection'.\n\t1. Set the 'Collection Label' to something that will help you remember it.\n\t2. You can leave the 'Parent Collection' field empty.\n5. Click into your newly made Collection.\n\t1. Press the 'share' button that looks like three dots connected by lines.\n\t2. Set the 'Interface Type' to `object-search` and click 'Create'.\n\t3. This will bring you to a new page with a search bar. Ignore this for now.\n6. Go back to Dashboard \u003e Settings \u003e API Keys and find your Quartz-specific Operand API key under 'Other keys'.\n\t1. Copy the key (which looks something like `0e733a7f-9b9c-48c6-9691-b54fa1c8b910`).\n\t2. Open `data/config.yaml`. Set `enableSemanticSearch` to `true` and `operandApiKey` to your copied key.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: true\noperandApiKey: \"0e733a7f-9b9c-48c6-9691-b54fa1c8b910\"\n```\n7. Make a commit and push your changes to GitHub. See the [[notes/hosting|hosting]] page if you haven't done this already.\n\t1. This step is *required* for Operand to be able to properly index your content. \n\t2. Head over to Dashboard \u003e Objects and select the collection that you made earlier\n8. Press `(Cmd + K)` to open the omnibar again and select 'Create GitHub Repo'\n\t1. Set the 'Repository Label' to `Quartz`\n\t2. Set the 'Repository Owner' to your GitHub username\n\t3. Set the 'Repository Ref' to `master`\n\t4. Set the 'Repository Name' to the name of your repository (usually just `quartz` if you forked the repository without changing the name)\n\t5. Leave 'Root Path' and 'Root URL' empty\n9. Wait for your repository to index and enjoy natural language search in Quartz! Operand refreshes the index every 2h so all you need to do is just push to GitHub to update the contents in the search.","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\n📁 [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ✏️ Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [Chloe's Garden](https://garden.chloeabrasada.online/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\n🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2022-08-21T13:58:20.381827465Z","tags":null}}